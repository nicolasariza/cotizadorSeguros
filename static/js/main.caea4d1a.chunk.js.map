{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayus","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","setResumen","setCargandoSpinner","useState","marca","year","plan","datos","setDatos","error","setError","agregarDatos","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferenciaYear","Date","getFullYear","obtenerDiferenciaYear","parseInt","incremento","calcularMarca","parseFloat","calcularPlan","toFixed","setTimeout","cotizacion","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","TextoCotizacion","ResultadoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargandoSpinner","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.caea4d1a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ContenedorHeader = styled.header`\r\n  background-color: #26c6da;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n  font-size: 2rem;\r\n  margin: 0;\r\n  font-family: \"Slabo 27px\", serif;\r\n  text-align: center;\r\n`;\r\n\r\nconst Header = ({ titulo }) => {\r\n  return (\r\n    <ContenedorHeader>\r\n      <TextoHeader>{titulo}</TextoHeader>\r\n    </ContenedorHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export function obtenerDiferenciaYear(year) {\r\n  return new Date().getFullYear() - year;\r\n}\r\n\r\nexport function calcularMarca(marca) {\r\n  let incremento;\r\n\r\n  switch (marca) {\r\n    case \"europeo\":\r\n      incremento = 1.3;\r\n      break;\r\n    case \"americano\":\r\n      incremento = 1.15;\r\n      break;\r\n    case \"asiatico\":\r\n      incremento = 1.05;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return incremento;\r\n}\r\n\r\nexport function calcularPlan(plan) {\r\n  return plan === \"basico\" ? 1.2 : 1.5;\r\n}\r\n\r\nexport function primerMayus(texto) {\r\n  return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { obtenerDiferenciaYear, calcularMarca, calcularPlan } from \"../helper\";\r\n\r\nconst Campo = styled.div`\r\n  display: flex;\r\n  margin-bottom: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border: 1px solid #e1e1e1;\r\n  --webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n  margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n  background-color: #00838f;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  border: none;\r\n  transition: background-color 0.1s ease;\r\n  margin-top: 2rem;\r\n\r\n  &:hover {\r\n    background-color: #26c6ea;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Error = styled.div`\r\n  background-color: red;\r\n  color: white;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst Formulario = ({ setResumen, setCargandoSpinner }) => {\r\n  const [datos, setDatos] = useState({\r\n    marca: \"\",\r\n    year: \"\",\r\n    plan: \"\"\r\n  });\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  // extraer los valores del state\r\n  const { marca, year, plan } = datos;\r\n\r\n  const agregarDatos = e => {\r\n    setDatos({ ...datos, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const cotizarSeguro = e => {\r\n    e.preventDefault();\r\n\r\n    if (marca.trim() === \"\" || year.trim() === \"\" || plan.trim() === \"\") {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    setError(false);\r\n\r\n    //valor inicial del seguro\r\n    let resultado = 2000;\r\n\r\n    //se obtiene la diferencia de años con un helper\r\n\r\n    const diferenciaYear = obtenerDiferenciaYear(parseInt(year));\r\n    // por cada año de diferencia se resta el 3% al valor inicial\r\n    resultado -= (diferenciaYear * 3 * resultado) / 100;\r\n    // dependiendo de la marca aumenta el precio del seguro\r\n    resultado = calcularMarca(marca) * resultado;\r\n    // dependiendo del plan escogido aumenta el valor\r\n    resultado = parseFloat(calcularPlan(plan) * resultado).toFixed(2);\r\n\r\n    setCargandoSpinner(true);\r\n    setTimeout(() => {\r\n      setCargandoSpinner(false);\r\n      setResumen({\r\n        cotizacion: resultado,\r\n        datos\r\n      });\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={cotizarSeguro}>\r\n      {error ? <Error>Todos los campos son obligatorios</Error> : null}\r\n      <Campo>\r\n        <Label>Marca</Label>\r\n        <Select\r\n          name=\"marca\"\r\n          value={marca}\r\n          //se pueden asignar el state de esta manera\r\n          onChange={e =>\r\n            setDatos({ ...datos, [e.target.name]: e.target.value })\r\n          }\r\n        >\r\n          <option value=\"\">-- Seleccione --</option>\r\n          <option value=\"americano\">Americano</option>\r\n          <option value=\"europeo\">Europeo</option>\r\n          <option value=\"asiatico\">Asiatico</option>\r\n        </Select>\r\n      </Campo>\r\n      <Campo>\r\n        <Label>Año</Label>\r\n        <Select name=\"year\" value={year} onChange={agregarDatos}>\r\n          <option value=\"\">-- Seleccione --</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2018\">2018</option>\r\n          <option value=\"2017\">2017</option>\r\n          <option value=\"2016\">2016</option>\r\n          <option value=\"2015\">2015</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2012\">2012</option>\r\n        </Select>\r\n      </Campo>\r\n\r\n      <Campo>\r\n        <Label>Plan</Label>\r\n        <InputRadio\r\n          type=\"radio\"\r\n          name=\"plan\"\r\n          value=\"basico\"\r\n          checked={plan === \"basico\"}\r\n          onChange={agregarDatos}\r\n        />\r\n        Básico\r\n        <InputRadio\r\n          type=\"radio\"\r\n          name=\"plan\"\r\n          value=\"completo\"\r\n          checked={plan === \"completo\"}\r\n          onChange={agregarDatos}\r\n        />\r\n        Completo\r\n      </Campo>\r\n      <Boton type=\"submit\">Cotizar</Boton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { primerMayus } from \"../helper\";\r\n\r\nconst ContenedorResumen = styled.div`\r\n  padding: 1rem;\r\n  text-align: center;\r\n  background-color: #00838f;\r\n  color: #fff;\r\n  margin-top: 1rem;\r\n`;\r\nconst Resumen = ({ datos }) => {\r\n  const { plan } = datos;\r\n  if (datos.marca === \"\" || datos.year === \"\" || plan === \"\") return null;\r\n  return (\r\n    <ContenedorResumen>\r\n      <h2>Resumen de cotización</h2>\r\n      <ul>\r\n        <li>Marca: {primerMayus(datos.marca)} </li>\r\n        <li>Plan: {primerMayus(plan)}</li>\r\n        <li>Año del plan: {primerMayus(datos.year)}</li>\r\n      </ul>\r\n    </ContenedorResumen>\r\n  );\r\n};\r\n\r\nexport default Resumen;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst Mensaje = styled.p`\r\n  background-color: rgb(127, 224, 237);\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n  color: #00838f;\r\n  padding: 1rem;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  margin: 0;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n  text-align: center;\r\n  padding: 0.5rem;\r\n  border: 1px solid #26c6da;\r\n  background-color: rgb(127, 224, 237);\r\n  margin-top: 1rem;\r\n  position: relative;\r\n`;\r\n\r\nconst Resultado = ({ cotizacion }) => {\r\n  return cotizacion === 0 ? (\r\n    <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\r\n  ) : (\r\n    <ResultadoCotizacion>\r\n      <TransitionGroup component=\"span\" className=\"resultado\">\r\n        <CSSTransition\r\n          classNames=\"resultado\"\r\n          key={cotizacion}\r\n          timeout={{ enter: 500, exit: 500 }}\r\n        >\r\n          <TextoCotizacion>\r\n            El total es: $<span>{cotizacion}</span>\r\n          </TextoCotizacion>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n    </ResultadoCotizacion>\r\n  );\r\n};\r\n\r\nexport default Resultado;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"sk-circle\">\r\n      <div className=\"sk-circle1 sk-child\"></div>\r\n      <div className=\"sk-circle2 sk-child\"></div>\r\n      <div className=\"sk-circle3 sk-child\"></div>\r\n      <div className=\"sk-circle4 sk-child\"></div>\r\n      <div className=\"sk-circle5 sk-child\"></div>\r\n      <div className=\"sk-circle6 sk-child\"></div>\r\n      <div className=\"sk-circle7 sk-child\"></div>\r\n      <div className=\"sk-circle8 sk-child\"></div>\r\n      <div className=\"sk-circle9 sk-child\"></div>\r\n      <div className=\"sk-circle10 sk-child\"></div>\r\n      <div className=\"sk-circle11 sk-child\"></div>\r\n      <div className=\"sk-circle12 sk-child\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport styled from \"@emotion/styled\";\r\nimport Formulario from \"./components/Formulario\";\r\nimport Resumen from \"./components/Resumen\";\r\nimport Resultado from \"./components/Resultado\";\r\nimport Spinner from \"./components/Spinner\";\r\n\r\n// Styled components\r\nconst Contenedor = styled.div`\r\n  max-width: 600px; \r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ContenedorFormulario = styled.div`\r\n  background-color: #fff;\r\n  padding: 3rem;\r\n`;\r\n\r\nfunction App() {\r\n  const [resumen, setResumen] = useState({\r\n    cotizacion: 0,\r\n    datos: {\r\n      marca: \"\",\r\n      year: \"\",\r\n      plan: \"\"\r\n    }\r\n  });\r\n\r\n  const [cargandoSpinner, setCargandoSpinner] = useState(false);\r\n\r\n  const { datos } = resumen;\r\n\r\n  return (\r\n    <Contenedor>\r\n      <Header titulo=\"Cotizador de seguros\" />\r\n      <ContenedorFormulario>\r\n        <Formulario\r\n          setResumen={setResumen}\r\n          setCargandoSpinner={setCargandoSpinner}\r\n        />\r\n        {cargandoSpinner ? <Spinner /> : null}\r\n        <Resumen datos={datos} />\r\n        {!cargandoSpinner ? (\r\n          <Resultado cotizacion={resumen.cotizacion} />\r\n        ) : null}\r\n      </ContenedorFormulario>\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}